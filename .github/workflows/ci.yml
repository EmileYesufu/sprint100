name: CI

on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sprint100_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        run: |
          cd server
          npm ci

      - name: Setup test database
        run: |
          cd server
          cp .env.example .env.test
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/sprint100_test" >> .env.test
          echo "NODE_ENV=test" >> .env.test
          echo "JWT_SECRET=test_jwt_secret_for_ci" >> .env.test
          echo "ALLOWED_ORIGINS=*" >> .env.test
          echo "RATE_LIMIT_MAX=5000" >> .env.test
          echo "ENABLE_REQUEST_LOGGING=true" >> .env.test

      - name: Run database migrations
        run: |
          cd server
          npx prisma migrate deploy
          npx prisma generate

      - name: Run tests
        run: |
          cd server
          npm test

      - name: Run test coverage
        run: |
          cd server
          npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./server/coverage/lcov.info
          flags: server
          name: server-coverage

  client-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Run client tests
        run: |
          cd client
          npm test -- --coverage --watchAll=false

      - name: Upload client coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./client/coverage/lcov.info
          flags: client
          name: client-coverage

  build:
    runs-on: ubuntu-latest
    needs: [test, client-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install server dependencies
        run: |
          cd server
          npm ci

      - name: Build server
        run: |
          cd server
          npm run build

      - name: Install client dependencies
        run: |
          cd client
          npm ci

      - name: Build client
        run: |
          cd client
          npm run build

  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd server
          npm ci
          cd ../client
          npm ci

      - name: Run security audit
        run: |
          cd server
          npm audit --audit-level=moderate
          cd ../client
          npm audit --audit-level=moderate

      - name: Run dependency check
        run: |
          cd server
          npx audit-ci --config audit-ci.json || true
          cd ../client
          npx audit-ci --config audit-ci.json || true